<!-- Author: shajidm@student.unimelb.edu.au -->

<!DOCTYPE html>
<!-- saved from url=(0053)https://getbootstrap.com/docs/4.1/examples/dashboard/ -->
<html lang="en" class="gr__getbootstrap_com"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="favicon.jpg">

    <title>Australian Social Media Analytics/</title>

    <!-- Bootstrap core CSS -->
    <link href="./Assets/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="./Assets/dashboard.css" rel="stylesheet">
  <style type="text/css">/* Chart.js */
@-webkit-keyframes chartjs-render-animation{from{opacity:0.99}to{opacity:1}}@keyframes chartjs-render-animation{from{opacity:0.99}to{opacity:1}}.chartjs-render-monitor{-webkit-animation:chartjs-render-animation 0.001s;animation:chartjs-render-animation 0.001s;}</style>

<script type="text/javascript">
window.onload = function() {
  var dataPoints1 = [];
  var dataPoints2 = [];
  var dataPoints3 = [];
  var chart1;
  var chart2;
  var chart3;


  $.getJSON("http://115.146.95.159:8003/AustralianMediaAnalyticsRestService?return=DivorceVsPos&callback=?", function(data) {  
    divorceVsPosData = data.DivorceVsPos;
    var divorceVsPosData2 = JSON.parse(divorceVsPosData);

    divorceVsPosSlopeData = parseInt(data.slope);
    divorceVsPosConstantData = parseInt(data.constant);

    $.each(divorceVsPosData2, function(key, value){   
      dataPoints2.push({x: parseInt(value[0]), y: parseInt(value[1])});
      dataPoints1.push({x: parseInt(value[0]), y: parseInt(value[0])*divorceVsPosSlopeData + divorceVsPosConstantData});
    });

    chart1 = new CanvasJS.Chart("chartContainer1",{
      animationEnabled: true,
      theme: "light1",
      title:{
        text:"Correlation between Divorce and Negative Sentiment"
      },
      axisY: {
        title: "Number of Divorces",
        crosshair: {
          enabled: false
        }
      },
      toolTip:{
        shared:true
      },  

      data: [{
        type: "line",
        showInLegend: true, 
        legendMarkerColor: "red",
        legendText: "Number of negative tweets",
        showInLegend: true,
        name: "Total tweets",
        markerType: "square",
        color: "red",
        dataPoints : dataPoints1
      },
      {
        type: "scatter",
        showInLegend: true, 
        legendMarkerColor: "green",
        legendText: "Number of negative tweets",
        showInLegend: true,
        name: "Total tweets",
        markerType: "circle",
        color: "green",
        dataPoints : dataPoints2
      }]
    });
    chart1.render();
  });
  
  
    $.getJSON("http://115.146.95.159:8003/AustralianMediaAnalyticsRestService?return=DivorceVsNeg&callback=?", function(data) {  
    DivorceVsNegData = data.DivorceVsNeg;
    var divorceVsNegData2 = JSON.parse(DivorceVsNegData);

    divorceVsNegSlopeData = parseInt(data.slope);
    divorceVsNegConstantData = parseInt(data.constant);

    var dataPoints1 = [];
    var dataPoints2 = [];
    $.each(divorceVsNegData2, function(key, value){

      dataPoints2.push({x: parseInt(value[0]), y: parseInt(value[1])});
      dataPoints1.push({x: parseInt(value[0]), y: parseInt(value[0]) * divorceVsNegSlopeData + divorceVsNegConstantData});

    });

    chart2 = new CanvasJS.Chart("chartContainer2",{
      animationEnabled: true,
      theme: "light1",
      title:{
        text:"Correlation between Divorce and Negative Sentiments"
      },
      axisY: {
        title: "Number of Divorces",
        crosshair: {
          enabled: false
        }
      },
      toolTip:{
        shared:true
      },  

      data: [{
        type: "line",
        showInLegend: true, 
        legendMarkerColor: "red",
        legendText: "Number of negative tweets",
        showInLegend: true,
        name: "Total tweets",
        markerType: "square",
        color: "red",
        dataPoints : dataPoints1
      },
      {
        type: "scatter",
        showInLegend: true, 
        legendMarkerColor: "green",
        legendText: "Number of negative tweets",
        showInLegend: true,
        name: "Total tweets",
        markerType: "circle",
        color: "green",
        dataPoints : dataPoints2
      }]
    });
    chart2.render();
  });

    $.getJSON("http://115.146.95.159:8003/AustralianMediaAnalyticsRestService?return=DivorceVsUrban&callback=?", function(data) {  
    DivorceVsUrban = data.DivorceVsUrban;
    var divorceVsUrbandata2 = JSON.parse(DivorceVsUrban);
    divorceVsUrbanSlopeData = parseInt(data.slope);
    divorceVsUrbanConstantData = parseInt(data.constant);
    var dataPoints1 = [];
    var dataPoints2 = [];
    $.each(divorceVsUrbandata2, function(key, value){

      dataPoints1.push({x: parseInt(value[0]), y: parseInt(value[0])*divorceVsUrbanSlopeData + divorceVsUrbanConstantData});
      dataPoints2.push({x: parseInt(value[0]), y: parseInt(value[1])});

    });

    chart3 = new CanvasJS.Chart("chartContainer3",{
      animationEnabled: true,
      theme: "light1",
      title:{
        text:"Correlation between a and b"
      },
      axisY: {
        title: "Number of people",
        crosshair: {
          enabled: false
        }
      },
      toolTip:{
        shared:true
      },  

      data: [{
        type: "line",
        showInLegend: true, 
        legendMarkerColor: "red",
        legendText: "Number of negative tweets",
        showInLegend: true,
        name: "Total tweets",
        markerType: "square",
        color: "red",
        dataPoints : dataPoints1
      },
      {
        type: "scatter",
        showInLegend: true, 
        legendMarkerColor: "green",
        legendText: "Number of positive tweets",
        showInLegend: true,
        name: "Total tweets",
        markerType: "circle",
        color: "green",
        dataPoints : dataPoints2
      }]
    });
    chart3.render();
  });

    $.getJSON("http://115.146.95.159:8003/AustralianMediaAnalyticsRestService?return=SepVsPos&callback=?", function(data) {  
    SepVsPos = data.SepVsPos;
    var SepVsPos2 = JSON.parse(SepVsPos);
    SepVsPosSlopeData = parseInt(data.slope);
    SepVsPosConstantData = parseInt(data.constant);
    var dataPoints1 = [];
    var dataPoints2 = [];
    $.each(SepVsPos2, function(key, value){
      dataPoints1.push({x: parseInt(value[0]), y: parseInt(value[0]) * SepVsPosSlopeData + SepVsPosConstantData});
      dataPoints2.push({x: parseInt(value[0]), y: parseInt(value[1])});

    });

    chart4 = new CanvasJS.Chart("chartContainer4",{
      animationEnabled: true,
      theme: "light1",
      title:{
        text:"Correlation between a and b"
      },
      axisY: {
        title: "Number of people",
        crosshair: {
          enabled: false
        }
      },
      toolTip:{
        shared:true
      },  

      data: [{
        type: "line",
        showInLegend: true, 
        legendMarkerColor: "red",
        legendText: "Number of negative tweets",
        showInLegend: true,
        name: "Total tweets",
        markerType: "square",
        color: "red",
        dataPoints : dataPoints1
      },
      {
        type: "scatter",
        showInLegend: true, 
        legendMarkerColor: "green",
        legendText: "Number of positive tweets",
        showInLegend: true,
        name: "Total tweets",
        markerType: "circle",
        color: "green",
        dataPoints : dataPoints2
      }]
    });
    chart4.render();
  });

    $.getJSON("http://115.146.95.159:8003/AustralianMediaAnalyticsRestService?return=SepVsNeg&callback=?", function(data) {  
    SepVsNeg = data.SepVsNeg;
    var SepVsNegdata = JSON.parse(SepVsNeg);
    SepVsNegSlopeData = parseInt(data.slope);
    SepVsNegConstantData = parseInt(data.constant);
    var dataPoints1 = [];
    var dataPoints2 = [];
    $.each(SepVsNegdata, function(key, value){
      dataPoints1.push({x: parseInt(value[0]), y: parseInt(value[0]) * SepVsNegSlopeData + SepVsNegConstantData});
      dataPoints2.push({x: parseInt(value[0]), y: parseInt(value[1])});

    });

    chart5 = new CanvasJS.Chart("chartContainer5",{
      animationEnabled: true,
      theme: "light1",
      title:{
        text:"Correlation between a and b"
      },
      axisY: {
        title: "Number of people",
        crosshair: {
          enabled: false
        }
      },
      toolTip:{
        shared:true
      },  

      data: [{
        type: "line",
        showInLegend: true, 
        legendMarkerColor: "red",
        legendText: "Number of negative tweets",
        showInLegend: true,
        name: "Total tweets",
        markerType: "square",
        color: "red",
        dataPoints : dataPoints1
      },
      {
        type: "scatter",
        showInLegend: true, 
        legendMarkerColor: "green",
        legendText: "Number of positive tweets",
        showInLegend: true,
        name: "Total tweets",
        markerType: "circle",
        color: "green",
        dataPoints : dataPoints2
      }]
    });
    chart5.render();
  });

    $.getJSON("http://115.146.95.159:8003/AustralianMediaAnalyticsRestService?return=SepVsUrban&callback=?", function(data) {  
    SepVsUrban = data.SepVsUrban;
    var SepVsUrban2 = JSON.parse(SepVsUrban);
    SepVsUrbanSlopeData = parseInt(data.slope);
    SepVsurbanConstantData = parseInt(data.constant);
    
    var dataPoints1 = [];
    var dataPoints2 = [];
    $.each(SepVsUrban2, function(key, value){
      dataPoints1.push({x: parseInt(value[0]), y: parseInt(value[0]) * SepVsUrbanSlopeData + SepVsurbanConstantData});
      dataPoints2.push({x: parseInt(value[0]), y: parseInt(value[1])});

    });

    chart6 = new CanvasJS.Chart("chartContainer6",{
      animationEnabled: true,
      theme: "light1",
      title:{
        text:"Correlation between a and b"
      },
      axisY: {
        title: "Number of people",
        crosshair: {
          enabled: false
        }
      },
      toolTip:{
        shared:true
      },  

      data: [{
        type: "line",
        showInLegend: true, 
        legendMarkerColor: "red",
        legendText: "Number of negative tweets",
        showInLegend: true,
        name: "Total tweets",
        markerType: "square",
        color: "red",
        dataPoints : dataPoints1
      },
      {
        type: "scatter",
        showInLegend: true, 
        legendMarkerColor: "green",
        legendText: "Number of positive tweets",
        showInLegend: true,
        name: "Total tweets",
        markerType: "circle",
        color: "green",
        dataPoints : dataPoints2
      }]
    });
    chart6.render();
  });
  
  
}
</script>
<script type="text/javascript" src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>

</head>

  <body data-gr-c-s-loaded="true">
    <nav class="navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow">
      <a class="navbar-brand col-sm-3 col-md-2 mr-0" href="divorceVsPos.htm">Australian Social Media Analytics</a>
    </nav>

    <div class="container-fluid">
      <div class="row">
        <nav class="col-md-2 d-none d-md-block bg-light sidebar">
          <div class="sidebar-sticky">
            <ul class="nav flex-column">
              <li class="nav-item">
                <a class="nav-link" href="divorceVsPos.htm">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-home"><path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path><polyline points="9 22 9 12 15 12 15 22"></polyline></svg>
                  DivorceVsPos 
                </a>
              </li>
              <li class="nav-item">
                <a class="nav-link active" href="DivorceVsNeg.htm">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-file"><path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"></path><polyline points="13 2 13 9 20 9"></polyline></svg>
                  DivorceVsNeg <span class="sr-only">(current)</span>
                </a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="DivorceVsUrban.htm">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-file"><path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"></path><polyline points="13 2 13 9 20 9"></polyline></svg>
                  DivorceVsUrban
                </a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="SepVsPos.htm">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-file"><path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"></path><polyline points="13 2 13 9 20 9"></polyline></svg>
                  SepVsPos
                </a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="SepVsNeg.htm">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-file"><path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"></path><polyline points="13 2 13 9 20 9"></polyline></svg>
                  SepVsNeg
                </a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="SepVsUrban.htm">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-file"><path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"></path><polyline points="13 2 13 9 20 9"></polyline></svg>
                  SepVsUrban
                </a>
              </li>
            </ul>
          </div>
        </nav>

        <main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4"><div class="chartjs-size-monitor" style="position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;"><div class="chartjs-size-monitor-expand" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"><div style="position:absolute;width:1000000px;height:1000000px;left:0;top:0"></div></div><div class="chartjs-size-monitor-shrink" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"><div style="position:absolute;width:200%;height:200%;left:0; top:0"></div></div></div>
          <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
            <h1 class="h2">DivorceVsNeg</h1>
          </div>


        <div id="chartContainer2" class="my-4 w-100 chartjs-render-monitor" style="display: block; height: 570px; width: 1352px;"></div>


        </main>
      </div>
    </div>

    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="./Assets/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery-slim.min.js"><\/script>')</script>
    <script type="text/javascript" src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>

    
    <script src="./Assets/popper.min.js"></script>
    <script src="./Assets/bootstrap.min.js"></script>

    <!-- Icons -->
    <script src="./Assets/feather.min.js"></script>
    <script>
      feather.replace()
    </script>

    <!-- Graphs -->
    <script src="./Assets/Chart.min.js"></script>
    <script>
      var ctx = document.getElementById("myChart");
      var myChart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
          datasets: [{
            data: [15339, 21345, 18483, 24003, 23489, 24092, 12034],
            lineTension: 0,
            backgroundColor: 'transparent',
            borderColor: '#007bff',
            borderWidth: 4,
            pointBackgroundColor: '#007bff'
          }]
        },
        options: {
          scales: {
            yAxes: [{
              ticks: {
                beginAtZero: false
              }
            }]
          },
          legend: {
            display: false,
          }
        }
      });
    </script>
</body></html>